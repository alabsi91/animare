let P=function(t){return t.Forward="forward",t.Reverse="reverse",t.Alternate="alternate",t.AlternateReverse="alternate-reverse",t}({}),g=function(t){return t.AfterPrevious="after-previous",t.WithPrevious="with-previous",t.FromStart="from-start",t}({}),p=function(t){return t.Play="play",t.Resume="resume",t.Pause="pause",t.Stop="stop",t.Complete="complete",t.Repeat="repeat",t}({});function K(t){return t}class D{#e=Object.assign({});#n=null;#l=null;#t=null;#i=null;#r=null;#a=null;#o(n,i){return this.#e[n]?this.#e[n].delete(i):!1}on(n,i){return this.#e[n]||(this.#e[n]=new Set),this.#e[n].add(i),()=>this.#o(n,i)}once(n,i){const r=this.on(n,()=>{i(),r()});return()=>this.#o(n,i)}emit(n){if(this.#e[n]){if(this.#e[n].forEach(i=>i()),n===p.Play){this.#n?.(),this.#n=null;return}if(n===p.Resume){this.#l?.(),this.#l=null;return}if(n===p.Pause){this.#t?.(),this.#t=null;return}if(n===p.Complete){this.#r?.(),this.#r=null;return}if(n===p.Repeat){this.#a?.(),this.#a=null;return}n===p.Stop&&(this.#i?.(),this.#i=null)}}clear(){this.#e=Object.assign({})}onPlayAsync(){if(this.#n===null)return new Promise(n=>{this.#n=n})}onResumeAsync(){if(this.#l===null)return new Promise(n=>{this.#l=n})}onPauseAsync(){if(this.#t===null)return new Promise(n=>{this.#t=n})}onStopAsync(){if(this.#i===null)return new Promise(n=>{this.#i=n})}onCompleteAsync(){if(this.#r===null)return new Promise(n=>{this.#r=n})}onRepeatAsync(){if(this.#a===null)return new Promise(n=>{this.#a=n})}}function L(t){return typeof t=="number"&&!Number.isNaN(t)&&Number.isFinite(t)}function M(t){const n=parseFloat(t);return L(n)?n/100:0}function I(t){return t<0?0:t>1?1:t}function q(t,n,i){return t<n?n:t>i?i:t}function S(t){const n=t;for(var i=arguments.length,r=new Array(i>1?i-1:0),l=1;l<i;l++)r[l-1]=arguments[l];for(let s=0;s<r.length;s++){const e=r[s];for(const f in e)n[f]=e[f]}return n}function Q(t){return typeof t=="object"&&!Array.isArray(t)}class N{#e;#n;#l;#t;#i;#r;#a;#o;#p=0;#m;#s=0;#h=0;#f=0;#y=!1;#c=!1;#u;#g;#d;#_(n){let i=arguments.length>1&&arguments[1]!==void 0?arguments[1]:.001;return Math.abs(this.#s-n)<i}#A(n){let i=arguments.length>1&&arguments[1]!==void 0?arguments[1]:5;return Math.abs(this.#f-n)<i}get info(){return{name:this.animationRef.name,index:this.#e,value:this.#r,progress:this.#s,overallProgress:this.#h,elapsedTime:this.#f,isFinished:this.#y,delayCount:this.#o,playCount:this.#m,isPlaying:this.#c,isProgressAt:this.#_.bind(this),isTimeAt:this.#A.bind(this)}}constructor(n,i,r){this.#e=r,this.animationRef=n,this.#d=i,this.Setup()}Setup(){this.#g=x(this.animationRef.direction),this.#u=U(this.animationRef.direction),this.#m=0,this.#o=0,this.#i=this.#u?this.animationRef.to:this.animationRef.from,this.#r=this.#u?this.animationRef.to:this.animationRef.from,this.#a=this.#u?this.animationRef.from:this.animationRef.to;const n=this.animationRef.offset,i=this.animationRef.delayCount===0?0:this.animationRef.delay,r=this.animationRef.duration*this.animationRef.playCount+i*this.animationRef.delayCount;switch(this.#e===0?g.FromStart:this.animationRef.timing){case g.FromStart:this.#t=n;break;case g.AfterPrevious:if(!this.#d)throw new Error("The previous animation is not defined.");this.#t=this.#d.endPoint+n;break;case g.WithPrevious:if(!this.#d)throw new Error("The previous animation is not defined.");this.#t=this.#d.#t+n;break}this.endPoint=this.#t+r,this.#n=this.#t+i,this.#l=this.#n+this.animationRef.duration}Update(n){if(this.animationRef.playCount!==0){if(n>=this.endPoint){this.#c=!1,this.#y=!0,this.#m=this.animationRef.playCount,this.#o=this.animationRef.delayCount,this.#s=1,this.#h=1,this.#f=this.endPoint-this.#t;const i=this.animationRef.direction===P.Reverse||this.animationRef.direction===P.Alternate;this.#r=i?this.animationRef.from:this.animationRef.to;return}if(n<this.#t){this.#c=!1,this.#y=!1,this.#m=0,this.#o=0,this.#s=0,this.#h=0,this.#f=0,this.#r=this.#u?this.animationRef.to:this.animationRef.from;return}this.#c=!0,this.#h=I((n-this.#t)/(this.endPoint-this.#t)),this.#P(n)}}Set(n){S(this.animationRef,n),O(this.animationRef)}#P(n){const i=this.animationRef.delayCount,r=this.animationRef.duration,l=r*(this.animationRef.playCount-i),s=this.animationRef.duration+this.animationRef.delay,e=s*i+this.animationRef.delay*i,a=(e+l)*this.#h;if(e&&a<=e){const d=q(Math.floor(a/s),0,i-1),y=i===0?0:this.animationRef.delay;this.#n=this.#t+s*d+y,this.#o=d+1,this.#m=d+1}else{const d=a-e,y=i+q(Math.floor(d/r),0,this.animationRef.playCount-1);this.#n=this.#t+e+r*(y-i),this.#o=i,this.#m=y+1}this.#l=this.#n+this.animationRef.duration,this.#f=n-this.#n,this.#s=I(this.#f/(this.#l-this.#n));const c=this.#C();this.#r=this.#i+(this.#a-this.#i)*this.animationRef.ease(c)}#C(){if(!this.#g)return this.#s;const n=(this.#s<=.5?this.#s:this.#s-.5)*2;return this.#p=this.#s<=.5?0:1,this.#p===0?(this.#i=this.#u?this.animationRef.to:this.animationRef.from,this.#a=this.#u?this.animationRef.from:this.animationRef.to,n):(this.#i=this.#u?this.animationRef.from:this.animationRef.to,this.#a=this.#u?this.animationRef.to:this.animationRef.from,n)}}const A={from:0,duration:350,delay:0,offset:0,delayCount:1,playCount:1,direction:P.Forward,timing:g.AfterPrevious,ease:t=>t};function x(t){return t===P.Alternate||t===P.AlternateReverse}function U(t){return t===P.Reverse||t===P.AlternateReverse}function O(t){if(!t.name)throw new Error("Animation `name` is required");if(typeof t.to!="number")throw new Error("The `to` value is required");if(typeof t.duration=="number"&&t.duration<0)throw new Error("The `duration` value cannot be a negative value.");if(typeof t.delay=="number"&&t.delay<0)throw new Error("The `delay` value cannot be a negative value.");if(typeof t.playCount=="number"&&t.playCount<0)throw new Error("The `playCount` value cannot be a negative value.");if(typeof t.delayCount=="number"&&t.delayCount<0)throw new Error("The `delayCount` value cannot be a negative value.");if(typeof t.playCount=="number"&&typeof t.delayCount=="number"&&t.delayCount>t.playCount)throw new Error("The `delayCount` value cannot be greater than the `playCount` value.")}function $(t,n,i){const r=C=>typeof C=="function"?C(i):C,l=r(t.from)??n.from??A.from,s=r(t.duration)??n.duration??A.duration,e=r(t.delay)??n.delay??A.delay,f=r(t.offset)??n.offset??A.offset,a=r(t.playCount)??n.playCount??A.playCount,c=typeof e=="number"?r(t.delayCount)??n.delayCount??a:0,d=r(t.direction)??n.direction??A.direction,y=r(t.timing)??n.timing??A.timing;return{name:t.name,to:t.to,from:l,duration:s,delay:e,offset:f,playCount:a,delayCount:c,direction:d,timing:y,ease:t.ease??n.ease??A.ease}}function W(t,n){const i=s=>typeof s<"u",r=s=>typeof s=="function"?s(n):s,l={};return i(t.from)&&(l.from=r(t.from)),i(t.duration)&&(l.duration=r(t.duration)),i(t.delay)&&(l.delay=r(t.delay)),i(t.offset)&&(l.offset=r(t.offset)),i(t.playCount)&&(l.playCount=r(t.playCount)),i(t.delayCount)&&(l.delayCount=r(t.delayCount)),i(t.direction)&&(l.direction=r(t.direction)),i(t.timing)&&(l.timing=r(t.timing)),i(t.to)&&(l.to=t.to),i(t.ease)&&(l.ease=t.ease),l}function z(t,n){const i=[];for(let r=0;r<t.length;r++){const l=t[r],s=$(l,n,r);r===0&&(s.timing=g.FromStart),O(s),i.push(s)}return i}function G(t){return t.timelinePlayCount===0&&console.warn("The `timelinePlayCount` with the value `0` will make the timeline not play."),{timelinePlayCount:t.timelinePlayCount??1,autoPlay:t.autoPlay??!0}}function X(t){const n=[];for(let i=0;i<t.length;i++){const r=t[i],l=n[i-1];if(i===0&&r.timing!==g.FromStart)throw new Error(`The timing value in the first animation must be "${g.FromStart}".`);n.push(new N(r,l,i))}return n}function v(t){const n=Math.max(...t.map(i=>i.endPoint));return n===1/0?Number.MAX_SAFE_INTEGER:n}function T(t,n){let i=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{};const r=G(i),l=z(t,i),s=new D,e={__startTime:0,__pauseTime:0,__lastFrameTime:0,__animations:[],__requestAnimationId:null,__startProgress:0,progress:0,duration:0,elapsedTime:0,isPlaying:!1,isPaused:!1,isFinished:!1,isFirstFrame:!0,playCount:1,fps:60,isProgressAt(u){let m=arguments.length>1&&arguments[1]!==void 0?arguments[1]:.001;return Math.abs(this.progress-u)<m},isTimeAt(u){let m=arguments.length>1&&arguments[1]!==void 0?arguments[1]:5;return Math.abs(this.elapsedTime-u)<m}};e.__animations=X(l),e.duration=v(e.__animations);const f={isRegistered:!1,hiddenTime:0,add(){this.isRegistered||(document.addEventListener("visibilitychange",this.handle),this.isRegistered=!0)},remove(){document.removeEventListener("visibilitychange",this.handle),this.isRegistered=!1},handle(){if(document.visibilityState==="hidden"){f.hiddenTime=performance.now();return}document.visibilityState==="visible"&&(e.__startTime+=performance.now()-f.hiddenTime,f.hiddenTime=0)}},a=Object.create(null);a.length=t.length;const c=(u,m)=>{e.elapsedTime=u-e.__startTime+e.__startProgress*e.duration,e.progress=I(e.elapsedTime/e.duration),e.fps=Math.round(1e3/(u-e.__lastFrameTime||16.66)),e.__lastFrameTime=u;for(let h=0;h<e.__animations.length;h++){const R=e.__animations[h];R.Update(e.elapsedTime);const b=R.info;a[b.name]=b,a[b.index]=b}if(e.progress!==1){if(n(a,e),m)return;e.__requestAnimationId=requestAnimationFrame(c);return}if(e.playCount===r.timelinePlayCount){e.isFinished=!0,e.isPlaying=!1,f.remove(),n(a,e),s.emit(p.Complete),e.__requestAnimationId=null;return}m||(n(a,e),s.emit(p.Repeat),e.__requestAnimationId=requestAnimationFrame(h=>{e.__startTime=h,e.__lastFrameTime=h,e.playCount++,e.__startProgress=0,c(h)}))},d=function(u){let m=arguments.length>1&&arguments[1]!==void 0?arguments[1]:1;if(r.timelinePlayCount===0||m===0){console.warn("[seek] Cannot seek the timeline because the `playCount` is set to 0.");return}if(r.timelinePlayCount>0&&typeof m=="number"&&m>r.timelinePlayCount){console.warn("[seek] Cannot seek the timeline because the param `playCount` is greater than the `timelinePlayCount`.");return}if(e.duration===0){console.warn("[seek] Cannot seek the timeline because the `duration` is 0.");return}if(typeof u=="number"&&(u<0&&(u=0,console.warn("[seek] The `startFrom` param cannot be a negative value.")),u>e.duration&&(u=e.duration,console.warn("[seek] The `startFrom` param cannot be greater than the duration of the timeline.")),u=q(u/e.duration,0,1)),typeof u=="string"&&(u=M(u),u<0&&(u=0,console.warn("[seek] The `startFrom` param cannot be a negative percentage.")),u>1&&(u=1,console.warn("[seek] The `startFrom` param percentage cannot be greater than 1."))),e.isPlaying){const h=performance.now();e.__startTime=h,e.__lastFrameTime=h}e.playCount=m,e.__startProgress=u},y=function(){let u=arguments.length>0&&arguments[0]!==void 0?arguments[0]:0,m=arguments.length>1&&arguments[1]!==void 0?arguments[1]:1;e.isPlaying&&e.__requestAnimationId!==null&&(cancelAnimationFrame(e.__requestAnimationId),e.__requestAnimationId=null),d(u,m),e.__requestAnimationId=requestAnimationFrame(h=>{e.__startTime=h,e.__lastFrameTime=h,e.progress=e.__startProgress,e.isPlaying=e.progress!==1,e.isFinished=e.progress===1,e.isPaused=!1,e.isFirstFrame=!0,f.add(),s.emit(p.Play),c(h),e.isFirstFrame=!1})},w=()=>{if(e.isPlaying&&e.__requestAnimationId!==null){console.warn("[playOneFrame] The timeline is already playing.");return}const u=performance.now();e.__startTime=u,e.__lastFrameTime=u,e.progress=e.__startProgress,e.isPlaying=!1,e.isFinished=e.progress===1,e.isPaused=!1,e.isFirstFrame=!1,c(u,!0)},C=()=>{if(!e.isPlaying){console.warn("[pause] The timeline is not playing.");return}if(e.isPaused){console.warn("[pause] The timeline is already paused.");return}if(!e.__requestAnimationId){console.error("[pause] `__requestAnimationId` is null.");return}cancelAnimationFrame(e.__requestAnimationId),e.__requestAnimationId=null,e.__pauseTime=performance.now(),e.isPaused=!0,e.isPlaying=!1,f.remove(),s.emit(p.Pause)},o=()=>{if(e.isPlaying){console.warn("[resume] The timeline is already playing.");return}if(!e.isPaused){console.warn("[resume] The timeline is not paused, playing from the start."),y();return}e.__startTime+=performance.now()-e.__pauseTime,e.__pauseTime=0,e.isPaused=!1,e.isPlaying=!0,f.add(),s.emit(p.Resume),e.__requestAnimationId=requestAnimationFrame(c)},F=function(){let u=arguments.length>0&&arguments[0]!==void 0?arguments[0]:e.duration,m=arguments.length>1&&arguments[1]!==void 0?arguments[1]:r.timelinePlayCount;e.isPlaying&&e.__requestAnimationId!==null&&(cancelAnimationFrame(e.__requestAnimationId),e.__requestAnimationId=null,e.isPlaying=!1),d(u,m),w(),s.emit(p.Stop)},_=u=>{for(let m=0;m<u.length;m++){const h=u[m];if(!h.name)throw new Error("[updateValues] Animation name is required.");const R=e.__animations.findIndex(j=>j.animationRef.name===h.name);if(R===-1)throw new Error(`[updateValues] Animation with name '${h.name}' not found.`);const b=W(h,R);e.__animations[R].Set(b)}for(let m=0;m<a.length;m++)e.__animations[m].Setup();if(e.isPlaying){const m=e.progress;e.duration=v(e.__animations),d(e.duration*m);return}e.duration=v(e.__animations)};return r.autoPlay&&y(),{timelineInfo:e,animationsInfo:a,updateValues:_,play:y,playOneFrame:w,resume:o,pause:C,stop:F,seek:d,on:s.on.bind(s),once:s.once.bind(s),onCompleteAsync:s.onCompleteAsync.bind(s),onPlayAsync:s.onPlayAsync.bind(s),onResumeAsync:s.onResumeAsync.bind(s),onPauseAsync:s.onPauseAsync.bind(s),onStopAsync:s.onStopAsync.bind(s),onRepeatAsync:s.onRepeatAsync.bind(s),clearEvents:s.clear.bind(s)}}function B(t,n){if(typeof t.to>"u")throw new Error("[group] The `to` value is required");t.to=typeof t.to=="number"?[t.to]:t.to;const i=t.to.length,r=o=>typeof o=="number",l=o=>typeof o=="object"&&!Array.isArray(o),s=o=>typeof o=="object"&&!Array.isArray(o),e=o=>typeof o=="function",f=o=>new Array(i).fill(o),a={to:t.to,from:r(t.from)?f(t.from):t.from,offset:r(t.offset)?f(t.offset):t.offset,delay:r(t.delay)?f(t.delay):t.delay,delayCount:r(t.delayCount)?f(t.delayCount):t.delayCount,playCount:r(t.playCount)?f(t.playCount):t.playCount,direction:l(t.direction)?f(t.direction):t.direction,timing:s(t.timing)?f(t.timing):t.timing,duration:r(t.duration)?f(t.duration):t.duration,ease:e(t.ease)?f(t.ease):t.ease},c=new Array(i);for(let o=0;o<i;o++)c[o]={name:o.toString(),to:a.to[o],from:Array.isArray(a.from)?a.from[o]:a.from,offset:Array.isArray(a.offset)?a.offset[o]:a.offset,delay:Array.isArray(a.delay)?a.delay[o]:a.delay,delayCount:Array.isArray(a.delayCount)?a.delayCount[o]:a.delayCount,playCount:Array.isArray(a.playCount)?a.playCount[o]:a.playCount,direction:Array.isArray(a.direction)?a.direction[o]:a.direction,timing:o===0?g.FromStart:Array.isArray(a.timing)?a.timing[o]:a.timing,duration:Array.isArray(a.duration)?a.duration[o]:a.duration,ease:Array.isArray(a.ease)?a.ease[o]:a.ease};const d=T(c,n,{autoPlay:t.autoPlay,timelinePlayCount:t.timelinePlayCount}),y=d.updateValues;return S(d,{updateValues:o=>{const F=[];for(let _=0;_<o.length;_++){if(typeof o[_].index!="number")throw new Error("[updateValues] Animation index is required.");F[_]={name:`${o[_].index}`,...o[_]}}y(F)}})}function H(t,n){const i=typeof t.playCount=="number"&&t.playCount<0,r=[{...t,name:"single",playCount:i?1:t.playCount}],l={autoPlay:t.autoPlay??!0,timelinePlayCount:i?-1:1},s=T(r,a=>n(a[0]),l),e=s.updateValues;return S(s,{updateValues:a=>e([{name:"single",...a}]),animationsInfo:s.animationsInfo[0]})}function E(t,n){let i=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{};return T(t,n,i)}E.timeline=T;E.single=H;E.group=B;export{P as D,p as E,g as T,E as a,K as c,Q as i};
